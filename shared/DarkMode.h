#if _MSC_VER > 1000
#pragma once
#endif

#ifndef __DARKMODE_H_3A328B64_49E7_428b_83E3_B76384AD07C7__
#define __DARKMODE_H_3A328B64_49E7_428b_83E3_B76384AD07C7__

#include "targetver.h"
#include <windows.h>
#include <stdlib.h>

#if _MSC_VER > 1600
#include <Uxtheme.h>
#else
typedef HANDLE					HTHEME;
#endif

#ifndef WM_THEMECHANGED
#define WM_THEMECHANGED			0x031A
#endif

#ifndef CSTR_LESS_THAN
#define CSTR_LESS_THAN			1	// string 1 less than string 2
#define CSTR_EQUAL				2	// string 1 equal to string 2
#define CSTR_GREATER_THAN		3	// string 1 greater than string 2
#endif

enum IMMERSIVE_HC_CACHE_MODE
{
	IHCM_USE_CACHED_VALUE,
	IHCM_REFRESH
};

// 1903 18362
enum PreferredAppMode
{
	Default,
	AllowDark,
	ForceDark,
	ForceLight,
	Max
};

enum WINDOWCOMPOSITIONATTRIB
{
	WCA_UNDEFINED = 0,
	WCA_NCRENDERING_ENABLED = 1,
	WCA_NCRENDERING_POLICY = 2,
	WCA_TRANSITIONS_FORCEDISABLED = 3,
	WCA_ALLOW_NCPAINT = 4,
	WCA_CAPTION_BUTTON_BOUNDS = 5,
	WCA_NONCLIENT_RTL_LAYOUT = 6,
	WCA_FORCE_ICONIC_REPRESENTATION = 7,
	WCA_EXTENDED_FRAME_BOUNDS = 8,
	WCA_HAS_ICONIC_BITMAP = 9,
	WCA_THEME_ATTRIBUTES = 10,
	WCA_NCRENDERING_EXILED = 11,
	WCA_NCADORNMENTINFO = 12,
	WCA_EXCLUDED_FROM_LIVEPREVIEW = 13,
	WCA_VIDEO_OVERLAY_ACTIVE = 14,
	WCA_FORCE_ACTIVEWINDOW_APPEARANCE = 15,
	WCA_DISALLOW_PEEK = 16,
	WCA_CLOAK = 17,
	WCA_CLOAKED = 18,
	WCA_ACCENT_POLICY = 19,
	WCA_FREEZE_REPRESENTATION = 20,
	WCA_EVER_UNCLOAKED = 21,
	WCA_VISUAL_OWNER = 22,
	WCA_HOLOGRAPHIC = 23,
	WCA_EXCLUDED_FROM_DDA = 24,
	WCA_PASSIVEUPDATEMODE = 25,
	WCA_USEDARKMODECOLORS = 26,
	WCA_LAST = 27
};

struct WINDOWCOMPOSITIONATTRIBDATA
{
	WINDOWCOMPOSITIONATTRIB Attrib;
	PVOID pvData;
	SIZE_T cbData;
};


BOOL AllowDarkModeForWindow(HWND hWnd, BOOL allow);
BOOL IsHighContrast();
VOID RefreshTitleBarThemeColor(HWND hWnd);
BOOL IsColorSchemeChangeMessage(LPARAM lParam);
BOOL IsColorSchemeChangeMessage(UINT message, LPARAM lParam);
VOID AllowDarkModeForApp(BOOL allow);
BOOL CheckBuildNumber(DWORD buildNumber);
BOOL InitDarkMode();
BOOL ShutdownDarkMode();
HRESULT DarkMode_SetWindowTheme(HWND hWnd);
BOOL GetDarkMode();
BOOL DarkMode_ThemeChanged();

#endif
